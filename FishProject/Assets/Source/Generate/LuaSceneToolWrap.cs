//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaSceneToolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaSceneTool), typeof(System.Object));
		L.RegFunction("RegisterEvent", RegisterEvent);
		L.RegFunction("ChangeScene", ChangeScene);
		L.RegFunction("ClearSceneData", ClearSceneData);
		L.RegFunction("UnloadSceneSuccess", UnloadSceneSuccess);
		L.RegFunction("LoadSceneSuccess", LoadSceneSuccess);
		L.RegFunction("New", _CreateLuaSceneTool);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CurrentSceneIndex", get_CurrentSceneIndex, set_CurrentSceneIndex);
		L.RegVar("SceneIndex", get_SceneIndex, set_SceneIndex);
		L.RegVar("IsUnload", get_IsUnload, set_IsUnload);
		L.RegVar("mUnloadEvent", get_mUnloadEvent, set_mUnloadEvent);
		L.RegVar("mLoadEvent", get_mLoadEvent, set_mLoadEvent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaSceneTool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LuaSceneTool obj = new LuaSceneTool();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaSceneTool.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			LuaSceneTool.RegisterEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			LuaSceneTool.ChangeScene(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearSceneData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			LuaSceneTool.ClearSceneData();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadSceneSuccess(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			LuaSceneTool.UnloadSceneSuccess(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadSceneSuccess(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			LuaSceneTool.LoadSceneSuccess(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentSceneIndex(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, LuaSceneTool.CurrentSceneIndex);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SceneIndex(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, LuaSceneTool.SceneIndex);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsUnload(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, LuaSceneTool.IsUnload);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mUnloadEvent(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaSceneTool.mUnloadEvent);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLoadEvent(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaSceneTool.mLoadEvent);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CurrentSceneIndex(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			LuaSceneTool.CurrentSceneIndex = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SceneIndex(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			LuaSceneTool.SceneIndex = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsUnload(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			LuaSceneTool.IsUnload = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mUnloadEvent(IntPtr L)
	{
		try
		{
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			LuaSceneTool.mUnloadEvent = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLoadEvent(IntPtr L)
	{
		try
		{
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			LuaSceneTool.mLoadEvent = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

